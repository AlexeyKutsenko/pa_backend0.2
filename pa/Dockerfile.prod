###########
# BUILDER #
###########

FROM ubuntu:20.04 as builder

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apt-get update

# psycopg2
RUN apt-get install -yqq libpq-dev gcc python3-dev musl-dev

# cryptography
RUN apt-get install -yqq libffi-dev libssl-dev

# python
RUN apt-get install -yqq python3 python3-pip

# install dependencies
RUN pip3 install --upgrade pip
COPY ./requirements.txt .
RUN pip3 wheel --no-cache-dir --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# FINAL #
#########

FROM ubuntu:20.04

RUN mkdir -p /home/app

# create the app user
RUN addgroup --system app && useradd -g app app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/pa
ENV PATH="/home/app/.local/bin:${PATH}"
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update

# psycopg2
RUN apt-get install -yqq libpq-dev

# python
RUN apt-get install -yqq python3 python3-pip

COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip3 install --upgrade pip
RUN pip3 install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/pa/entrypoint.prod.sh"]
